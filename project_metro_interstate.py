# -*- coding: utf-8 -*-
"""Project Metro Interstate.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/19nkXuXrixLksxX2f8YcdXbryxzVHt1i4

# Project Metro Interstate

Data visualization project.

We're going to analyze a dataset about the westbound traffic on the [I-94 Interstate highway](https://en.wikipedia.org/wiki/Interstate_94). The goal of our analysis is to determine a few indicators of heavy traffic on I-94. These indicators can be weather type, time of the day, time of the week, etc.

The [dataset documentation](https://archive.ics.uci.edu/ml/datasets/Metro+Interstate+Traffic+Volume) mentions that a station located approximately midway between Minneapolis and Saint Paul recorded the traffic data. Also, the station only records westbound traffic (cars moving from east to west). This means that the results of our analysis will be about the westbound traffic in the proximity of that station. In other words, we should avoid generalizing our results for the entire I-94 highway.
"""

!wget http://bioinf-mw.bihz.upwr.edu.pl/students-data/Metro_Interstate_Traffic_Volume.csv

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
import matplotlib.pyplot as plt
# %matplotlib inline
import seaborn as sns

dane = pd.read_csv('Metro_Interstate_Traffic_Volume.csv')

dane.head(5)

dane.tail(5)

dane.info()

dane.describe(include ='all')

dane['holiday'].value_counts()

dane['temp'].plot()

sns.relplot(data=dane['temp'])

"""Changing degrees Kelvin to degrees Celsius and deleting incorret data"""

dane['temp'].describe()

dane['temp']=(dane['temp'] - 273.15)
dane['temp'].describe()

dane = dane[dane['temp'] > -25]

dane['temp'].describe()

sns.relplot(data=dane['temp'])

dane['traffic_volume'].plot()

sns.relplot(data=dane['traffic_volume'])

dane['traffic_volume'].describe(include='all')

"""About 25% of the time, there were 1,193 cars or fewer passing the station each hour — this probably occurs during the night, or when a road is under construction.
About 75% of the time, the traffic volume was four times as much (4,933 cars or more).

This possibility that nighttime and daytime might influence traffic volume gives our analysis an interesting direction: comparing daytime with nighttime data. 

We'll start by dividing the dataset into two parts:

Daytime data: hours from 7 a.m. to 7 p.m. (12 hours)
Nighttime data: hours from 7 p.m. to 7 a.m. (12 hours)
"""

dane['date_time'] = pd.to_datetime(dane['date_time'])

dane_daytime = dane[(dane['date_time'].dt.hour >= 7) & (dane['date_time'].dt.hour <= 19)]

dane_nighttime = dane[(dane['date_time'].dt.hour < 7) | (dane['date_time'].dt.hour > 19)]

"""Some data visualization"""

plt.figure(figsize=(18,9))
plt.subplot(1, 2, 1)
plt.hist(dane_daytime['traffic_volume'], bins=30)
plt.title('Daytime traffic volume')
plt.xlabel('Traffic volume')
plt.ylabel('Frequency')
plt.xlim(0, max(dane['traffic_volume'])) 
plt.ylim(0, max(dane['traffic_volume'])) 

plt.subplot(1, 2, 2)
plt.hist(dane_nighttime['traffic_volume'], bins=30)
plt.title('Nighttime traffic volume')
plt.xlabel('Traffic volume')
plt.ylabel('Frequency')
plt.xlim(0, max(dane['traffic_volume'])) 
plt.ylim(0, max(dane['traffic_volume'])) 

plt.tight_layout()
plt.show()

"""Previously, we determined that the traffic at night is generally light. Our goal is to find indicators of heavy traffic, so we decided to only focus on the daytime data moving forward. 

One of the possible indicators of heavy traffic is time. There might be more people on the road in a certain month, on a certain day, or at a certain time of the day.
"""

dane_daytime['month'] = dane_daytime['date_time'].dt.month

dane_daytime.head(5)

by_month = dane_daytime.groupby('month').mean()
by_month['traffic_volume']

by_month['traffic_volume'].plot.line()

"""In the months of November, December, January, February and July there is less traffic."""

dane_daytime['dayofweek'] = dane_daytime['date_time'].dt.dayofweek

dane_daytime['dayofweek']
by_dayofweek = dane_daytime.groupby('dayofweek').mean()
by_dayofweek['traffic_volume']

by_dayofweek['traffic_volume'].plot.line()

"""The highest traffic volume is on days from Monday to Friday (bussiness days).

Since we are looking into days, when the traffic is the highest, we will divide the data into bussiness days and weeknd.
"""

dane_daytime['hour'] = dane_daytime['date_time'].dt.hour

bussiness_days = dane_daytime.copy()[dane_daytime['dayofweek'] <= 4] # 4 == Friday
weekend = dane_daytime.copy()[dane_daytime['dayofweek'] >= 5] # 5 == Saturday

by_hour_business = bussiness_days.groupby('hour').mean()
by_hour_weekend = weekend.groupby('hour').mean()

plt.figure(figsize=(18,9))
plt.subplot(1, 2, 1)
plt.plot(by_hour_weekend['traffic_volume'])
plt.title('Weekend traffic volume')
plt.xlabel('Time')
plt.ylabel('Traffic volume')

plt.subplot(1, 2, 2)
plt.plot(by_hour_business['traffic_volume'])
plt.title('Business traffic volume')
plt.xlabel('Time')
plt.ylabel('Traffic volume')

plt.tight_layout()
plt.show()

"""On the weekend, the traffic is increasing from morning untill midday (12.p.m), then it maintains the volume and starts decrasing about 4 p.m.

On bussiness days, the traffic is high in the morning but it is constantly decresing untill 10 a.m. when it starts to increase. The highest traffic volume is around 5 p.m. but then there is a sudden drop of traffic.

So far, we've focused on finding time indicators for heavy traffic, and we reached the following conclusions:

The traffic is usually heavier during warm months (March–October) compared to cold months (November–February).
The traffic is usually heavier on business days compared to weekends.
On business days, the rush hours are around 7 and 16.
Another possible indicator of heavy traffic is weather.
"""

dane.loc[:, ['temp', 'rain_1h', 'snow_1h', 'clouds_all', 'traffic_volume']].corr()['traffic_volume']

"""Strongest correlation of traffic volumne occurs with temp. Nevertheless correlation = 0.123 indicaties rather weak correlation."""

plt.figure(figsize=(20,10))
plt.subplot(1, 3, 1)
plt.scatter(dane['traffic_volume'], dane['temp'])
plt.title('All data temp traffic volume')
plt.xlabel('trafficcolume')
plt.ylabel('temp')

plt.subplot(1, 3, 2)
plt.scatter(dane_daytime['traffic_volume'], dane_daytime['temp'])
plt.title('Day temp traffic volume')
plt.xlabel('traffic columne')
plt.ylabel('temp')

plt.subplot(1, 3, 3)
plt.scatter(dane_nighttime['traffic_volume'], dane_nighttime['temp'])
plt.title('Night temp traffic volume')
plt.xlabel('traffic columne')
plt.ylabel('temp')

plt.tight_layout()

"""During the day, there is higher traffic volume at all temperatures, while at night, traffic volume is lower (also at all temperatures)

We will group our data by weather.
"""

by_weather_main = dane.groupby('weather_main').mean()

plt.barh(by_weather_main.index,by_weather_main['traffic_volume'])
plt.show()

"""The highest traffic volume occurs with weather like 'Clouds' and 'Haze', the lowest is when it's 'Squall'"""

by_weather_desc = dane_daytime.groupby('weather_description').mean()

plt.figure(figsize=(6,12))
plt.barh(by_weather_desc.index, by_weather_desc['traffic_volume'])
plt.show()

"""From more precise description we can learn that the most traffic occurs when it's 'light rain ans snow' and 'shower snow'

In this project, we tried to find a few indicators of heavy traffic on the I-94 Interstate highway. We managed to find two types of indicators:

Time indicators:

* The traffic is usually heavier during warm months (March–October) compared to cold months (November–February).
* The traffic is usually heavier on business days compared to the weekends.
* On business days, the rush hours are around 7 and 16.

Weather indicators
* Shower snow
* Light rain and snow
"""